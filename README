== acts_as_relationable by Winton Welsh <win@sumapp.com>

  Automatically creates habtm :through relationships using using a single join table across multiple models.


== What's so great about this?

  - can be self referential
  - all relationships use a single join table
  - easily define relationship-specific fields


== Install
  
  (From RAILS_ROOT)
    git submodule add git@github.com:winton/acts_as_relationable.git vendor/plugins/acts_as_relationable
    script/generate acts_as_relationable
    rake db:migrate


== Model

  class User < ActiveRecord::Base
    acts_as_relationable :books
  end
  
  class Book < ActiveRecord::Base
    acts_as_relationable :users
  end
  
  
== Controller

  b = Book.find :first
  u = User.find :first
  u.books << b
  u.books  # [ b ]
  b.users  # [ u ]
  

== Self referential relationships

  class User < ActiveRecord::Base
    acts_as_relationable :users
    
    u = User.create
    self.child_users << u
    u.parent_users  # == self
  end


== Relationship-specific fields

  In the example directly above, what if some users are 'favorite' and 'extra favorite'?
  
  Run the generator
    script/generate acts_as_relationable favorite:boolean extra_favorite:boolean
    rake db:migrate
  
  class User < ActiveRecord::Base
    acts_as_relationable :users, :fields => [ :favorite, :extra_favorite ]
    
    self.child_users.first.update_attribute :extra_favorite, true
    self.child_users.first.favorite?        # == false
    self.child_users.first.extra_favorite?  # == true
    self.child_users.favorites(false)       # [ self.child_users.first ]
  end


== Unique records only

  acts_as_relationable :books, :unique => true